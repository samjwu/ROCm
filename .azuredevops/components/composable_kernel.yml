parameters:
- name: checkoutRepo
  type: string
  default: 'self'
- name: checkoutRef
  type: string
  default: ''
- name: aptPackages
  type: object
  default:
    - cmake
    - ninja-build
    - git
    - python3-pip
    - libdrm-dev
    - ccache
- name: rocmDependencies
  type: object
  default:
    - rocm-cmake
    - llvm-project
    - ROCR-Runtime
    - clr
    - rocminfo
    - rocprofiler-register
- name: rocmTestDependencies
  type: object
  default:
    - clr
    - composable_kernel
    - llvm-project
    - rocminfo
    - rocprofiler-register
    - ROCR-Runtime

jobs:
- job: composable_kernel
  timeoutInMinutes: 240
  variables:
  - group: common
  - template: /.azuredevops/variables-global.yml
  - name: DAY_STRING
    value: $[format('{0:ddMMyyyy}', pipeline.startTime)]
  pool: ${{ variables.ULTRA_BUILD_POOL }}
  workspace:
    clean: all
  strategy:
    matrix:
      gfx942:
        JOB_GPU_TARGET: gfx942
  steps:
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/dependencies-other.yml
    parameters:
      aptPackages: ${{ parameters.aptPackages }}
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/preamble.yml
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/checkout.yml
    parameters:
      checkoutRepo: ${{ parameters.checkoutRepo }}
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/dependencies-rocm.yml
    parameters:
      dependencyList: ${{ parameters.rocmDependencies }}
      gpuTarget: $(JOB_GPU_TARGET)
      # CI case: download latest default branch build
      ${{ if eq(parameters.checkoutRef, '') }}:
        dependencySource: staging
      # manual build case: triggered by ROCm/ROCm repo
      ${{ elseif ne(parameters.checkoutRef, '') }}:
        dependencySource: tag-builds
  - script: |
      mkdir -p $(CCACHE_DIR)
      echo "##vso[task.prependpath]/usr/lib/ccache"
    displayName: Update path for ccache
  - task: Cache@2
    displayName: Ccache caching
    inputs:
      key: composable_kernel | $(Agent.OS) | $(JOB_GPU_TARGET) | $(DAY_STRING) | $(Agent.BuildDirectory)/rocm/llvm/bin/amdclang++
      path: $(CCACHE_DIR)
      restoreKeys: |
        composable_kernel | $(Agent.OS) | $(JOB_GPU_TARGET) | $(DAY_STRING)
        composable_kernel | $(Agent.OS) | $(JOB_GPU_TARGET)
        composable_kernel | $(Agent.OS)
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/build-cmake.yml
    parameters:
      extraBuildFlags: >-
        -DCMAKE_CXX_COMPILER=$(Agent.BuildDirectory)/rocm/llvm/bin/amdclang++
        -DCMAKE_C_COMPILER=$(Agent.BuildDirectory)/rocm/llvm/bin/amdclang
        -DCMAKE_CXX_COMPILER_LAUNCHER=ccache
        -DCMAKE_C_COMPILER_LAUNCHER=ccache
        -DCMAKE_HIP_FLAGS="-Wno-missing-include-dirs"
        -DCMAKE_PREFIX_PATH=$(Agent.BuildDirectory)/rocm
        -DCK_BUILD_JIT_LIB=ON
        -DCMAKE_POSITION_INDEPENDENT_CODE=ON
        -DCMAKE_BUILD_TYPE=Release
        -DGPU_TARGETS=$(JOB_GPU_TARGET)
        -GNinja
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/artifact-upload.yml
    parameters:
      gpuTarget: $(JOB_GPU_TARGET)

- job: composable_kernel_testing
  dependsOn: composable_kernel
  condition: and(succeeded(), eq(variables.ENABLE_GFX942_TESTS, 'true'))
  variables:
  - group: common
  - template: /.azuredevops/variables-global.yml
  - name: TEST_LOG_FILE
    value: $(Pipeline.Workspace)/ckTestLog.log
  pool: $(JOB_TEST_POOL)
  workspace:
    clean: all
  strategy:
    matrix:
      gfx942:
        JOB_GPU_TARGET: gfx942
        JOB_TEST_POOL: ${{ variables.GFX942_TEST_POOL }}
  steps:
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/dependencies-other.yml
    parameters:
      aptPackages: ${{ parameters.aptPackages }}
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/preamble.yml
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/local-artifact-download.yml
    parameters:
      gpuTarget: $(JOB_GPU_TARGET)
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/dependencies-aqlprofile.yml
    parameters:
      ${{ if eq(parameters.checkoutRef, '') }}:
        dependencySource: staging
      ${{ elseif ne(parameters.checkoutRef, '') }}:
        dependencySource: tag-builds
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/dependencies-rocm.yml
    parameters:
      dependencyList: ${{ parameters.rocmTestDependencies }}
      gpuTarget: $(JOB_GPU_TARGET)
      ${{ if eq(parameters.checkoutRef, '') }}:
        dependencySource: staging
      ${{ elseif ne(parameters.checkoutRef, '') }}:
        dependencySource: tag-builds
  - task: Bash@3
    displayName: Iterate through test scripts
    inputs:
      targetType: inline
      script: |
        for file in ./test_*; do
          ./$file | tee -a $(TEST_LOG_FILE)
        done
      workingDirectory: $(Agent.BuildDirectory)/rocm/bin
