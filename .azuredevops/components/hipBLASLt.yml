parameters:
- name: checkoutRepo
  type: string
  default: 'self'
- name: checkoutRef
  type: string
  default: ''
- name: aptPackages
  type: object
  default:
    - git
    - libdrm-dev
    - libmsgpack-dev
    - libnuma-dev
    - ninja-build
    - python3-pip
    - python3-venv
    - gfortran
    - libblas-dev
    - ccache
- name: pipModules
  type: object
  default:
    - joblib
- name: rocmDependencies
  type: object
  default:
    - aomp
    - clr
    - hipBLAS-common
    - llvm-project
    - rocminfo
    - rocm_smi_lib
    - rocprofiler-register
    - ROCR-Runtime
    - roctracer
- name: rocmTestDependencies
  type: object
  default:
    - aomp
    - clr
    - hipBLAS-common
    - llvm-project
    - rocminfo
    - rocm_smi_lib
    - rocprofiler-register
    - ROCR-Runtime
    - roctracer

jobs:
- job: hipBLASLt
  timeoutInMinutes: 300
  variables:
  - group: common
  - template: /.azuredevops/variables-global.yml
  - name: HIP_ROCCLR_HOME
    value: $(Build.BinariesDirectory)/rocm
  - name: TENSILE_ROCM_ASSEMBLER_PATH
    value: $(Agent.BuildDirectory)/rocm/llvm/bin/amdclang
  - name: CMAKE_CXX_COMPILER
    value: $(Agent.BuildDirectory)/rocm/bin/hipcc
  - name: TENSILE_ROCM_OFFLOAD_BUNDLER_PATH
    value: $(Agent.BuildDirectory)/rocm/llvm/bin/clang-offload-bundler
  - name: TENSILE_ROCM_PATH
    value: $(Agent.BuildDirectory)/rocm/bin/hipcc
  - name: PATH
    value: $(Agent.BuildDirectory)/rocm/llvm/bin:$(Agent.BuildDirectory)/rocm/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/snap/bin
  - name: DAY_STRING
    value: $[format('{0:ddMMyyyy}', pipeline.startTime)]
  pool: ${{ variables.ULTRA_BUILD_POOL }}
  workspace:
    clean: all
  strategy:
    matrix:
      gfx942:
        JOB_GPU_TARGET: gfx942
  steps:
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/dependencies-other.yml
    parameters:
      aptPackages: ${{ parameters.aptPackages }}
      pipModules: ${{ parameters.pipModules }}
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/dependencies-cmake-latest.yml
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/preamble.yml
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/checkout.yml
    parameters:
      checkoutRepo: ${{ parameters.checkoutRepo }}
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/dependencies-rocm.yml
    parameters:
      dependencyList: ${{ parameters.rocmDependencies }}
      gpuTarget: $(JOB_GPU_TARGET)
      # CI case: download latest default branch build
      ${{ if eq(parameters.checkoutRef, '') }}:
        dependencySource: staging
      # manual build case: triggered by ROCm/ROCm repo
      ${{ elseif ne(parameters.checkoutRef, '') }}:
        dependencySource: tag-builds
  - script: sudo ln -s $(Agent.BuildDirectory)/rocm /opt/rocm
    displayName: ROCm symbolic link
# Build and install gtest, lapack, hipBLAS-common
# $(Pipeline.Workspace)/deps is a temporary folder for the build process
# $(Pipeline.Workspace)/s/deps is part of the hipBLASLt repo
  - script: mkdir $(Pipeline.Workspace)/deps
    displayName: Create temp folder for external dependencies
# hipBLASLt already has a CMake script for external deps, so we can just run that
# https://github.com/ROCm/hipBLASLt/blob/develop/deps/CMakeLists.txt
  - script: cmake $(Pipeline.Workspace)/s/deps
    displayName: Configure hipBLASLt external dependencies
    workingDirectory: $(Pipeline.Workspace)/deps
  - script: make
    displayName: Build hipBLASLt external dependencies
    workingDirectory: $(Pipeline.Workspace)/deps
  - script: sudo make install
    displayName: Install hipBLASLt external dependencies
    workingDirectory: $(Pipeline.Workspace)/deps
  - script: |
      mkdir -p $(CCACHE_DIR)
      echo "##vso[task.prependpath]/usr/lib/ccache"
    displayName: Update path for ccache
  - task: Cache@2
    displayName: Ccache caching
    inputs:
      key: hipBLASLt | $(Agent.OS) | $(JOB_GPU_TARGET) | $(DAY_STRING) | $(Agent.BuildDirectory)/rocm/llvm/bin/amdclang++
      path: $(CCACHE_DIR)
      restoreKeys: |
        hipBLASLt | $(Agent.OS) | $(JOB_GPU_TARGET) | $(DAY_STRING)
        hipBLASLt | $(Agent.OS) | $(JOB_GPU_TARGET)
        hipBLASLt | $(Agent.OS)
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/build-cmake.yml
    parameters:
      extraBuildFlags: >-
        -DCMAKE_BUILD_TYPE=Release
        -DCMAKE_CXX_COMPILER=$(Agent.BuildDirectory)/rocm/llvm/bin/amdclang++
        -DCMAKE_C_COMPILER=$(Agent.BuildDirectory)/rocm/llvm/bin/amdclang
        -DCMAKE_CXX_COMPILER_LAUNCHER=ccache
        -DCMAKE_C_COMPILER_LAUNCHER=ccache
        -DAMDGPU_TARGETS=$(JOB_GPU_TARGET)
        -DTensile_LOGIC=
        -DTensile_CPU_THREADS=
        -DTensile_CODE_OBJECT_VERSION=default
        -DTensile_LIBRARY_FORMAT=msgpack
        -DCMAKE_PREFIX_PATH="$(Agent.BuildDirectory)/rocm"
        -DBUILD_CLIENTS_TESTS=ON
        -GNinja
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/artifact-upload.yml
    parameters:
      gpuTarget: $(JOB_GPU_TARGET)


- job: hipBLASLt_testing
  dependsOn: hipBLASLt
  condition: and(succeeded(), eq(variables.ENABLE_GFX942_TESTS, 'true'))
  variables:
  - group: common
  - template: /.azuredevops/variables-global.yml
  pool: $(JOB_TEST_POOL)
  workspace:
    clean: all
  strategy:
    matrix:
      gfx942:
        JOB_GPU_TARGET: gfx942
        JOB_TEST_POOL: ${{ variables.GFX942_TEST_POOL }}
  steps:
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/dependencies-other.yml
    parameters:
      aptPackages: ${{ parameters.aptPackages }}
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/preamble.yml
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/local-artifact-download.yml
    parameters:
      gpuTarget: $(JOB_GPU_TARGET)
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/dependencies-aqlprofile.yml
    parameters:
      ${{ if eq(parameters.checkoutRef, '') }}:
        dependencySource: staging
      ${{ elseif ne(parameters.checkoutRef, '') }}:
        dependencySource: tag-builds
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/dependencies-rocm.yml
    parameters:
      dependencyList: ${{ parameters.rocmTestDependencies }}
      gpuTarget: $(JOB_GPU_TARGET)
      ${{ if eq(parameters.checkoutRef, '') }}:
        dependencySource: staging
      ${{ elseif ne(parameters.checkoutRef, '') }}:
        dependencySource: tag-builds
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/test.yml
    parameters:
      componentName: hipBLASLt
      testDir: '$(Agent.BuildDirectory)/rocm/bin'
      testExecutable: './hipblaslt-test'
      testParameters: '--gtest_output=xml:./test_output.xml --gtest_color=yes --gtest_filter=*pre_checkin*'
