parameters:
- name: checkoutRepo
  type: string
  default: 'self'
- name: checkoutRef
  type: string
  default: ''
- name: aptPackages
  type: object
  default:
    - python3-pip
    - cmake
    - ninja-build
    - git
    - libcap-dev
    - protobuf-compiler
    - build-essential
    - autoconf
    - libtool
    - pkg-config
    - libdrm-dev
    - libyaml-cpp-dev
- name: rocmDependencies
  type: object
  default:
    - amdsmi
    - clr
    - llvm-project
    - rocBLAS
    - rocm-cmake
    - rocminfo
    - rocm_smi_lib
    - ROCmValidationSuite
    - rocprofiler
    - rocprofiler-register
    - ROCR-Runtime
- name: rocmTestDependencies
  type: object
  default:
    - amdsmi
    - clr
    - llvm-project
    - rocm-cmake
    - rocminfo
    - rocm_smi_lib
    - ROCmValidationSuite
    - rocprofiler
    - rocprofiler-register
    - ROCR-Runtime

jobs:
- job: rdc
  variables:
  - group: common
  - template: /.azuredevops/variables-global.yml
  pool: ${{ variables.MEDIUM_BUILD_POOL }}
  workspace:
    clean: all
  strategy:
    matrix:
      gfx942:
        JOB_GPU_TARGET: gfx942
  steps:
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/dependencies-other.yml
    parameters:
      aptPackages: ${{ parameters.aptPackages }}
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/preamble.yml
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/checkout.yml
    parameters:
      checkoutRepo: ${{ parameters.checkoutRepo }}
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/dependencies-rocm.yml
    parameters:
      dependencyList: ${{ parameters.rocmDependencies }}
      gpuTarget: $(JOB_GPU_TARGET)
      # CI case: download latest default branch build
      ${{ if eq(parameters.checkoutRef, '') }}:
        dependencySource: staging
      # manual build case: triggered by ROCm/ROCm repo
      ${{ elseif ne(parameters.checkoutRef, '') }}:
        dependencySource: tag-builds
# Build grpc
  - task: Bash@3
    displayName: 'git clone grpc'
    inputs:
      targetType: inline
      script: git clone -b v1.61.0 https://github.com/grpc/grpc --depth=1 --shallow-submodules --recurse-submodules
      workingDirectory: $(Build.SourcesDirectory)
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/build-cmake.yml
    parameters:
      cmakeBuildDir: $(Build.SourcesDirectory)/grpc/build
      installDir: $(Build.SourcesDirectory)/bin
      extraBuildFlags: >-
        -DgRPC_INSTALL=ON
        -DgRPC_BUILD_TESTS=OFF
        -DBUILD_SHARED_LIBS=ON
        -DCMAKE_INSTALL_LIBDIR=lib
        -DCMAKE_BUILD_TYPE=Release
        -DAMDGPU_TARGETS=$(JOB_GPU_TARGET)
        -GNinja
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/build-cmake.yml
    parameters:
      extraBuildFlags: >-
        -DCMAKE_PREFIX_PATH=$(Agent.BuildDirectory)/rocm
        -DGRPC_ROOT="$(Build.SourcesDirectory)/bin"
        -DBUILD_RVS=ON
        -DBUILD_PROFILER=ON
        -DBUILD_TESTS=ON
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/artifact-upload.yml
    parameters:
      gpuTarget: $(JOB_GPU_TARGET)

- job: rdc_testing
  dependsOn: rdc
  condition: and(succeeded(), eq(variables.ENABLE_GFX942_TESTS, 'true'))
  variables:
  - group: common
  - template: /.azuredevops/variables-global.yml
  pool: $(JOB_TEST_POOL)
  workspace:
    clean: all
  strategy:
    matrix:
      gfx942:
        JOB_GPU_TARGET: gfx942
        JOB_TEST_POOL: ${{ variables.GFX942_TEST_POOL }}
  steps:
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/dependencies-other.yml
    parameters:
      aptPackages: ${{ parameters.aptPackages }}
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/preamble.yml
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/local-artifact-download.yml
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/dependencies-aqlprofile.yml
    parameters:
      ${{ if eq(parameters.checkoutRef, '') }}:
        dependencySource: staging
      ${{ elseif ne(parameters.checkoutRef, '') }}:
        dependencySource: tag-builds
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/dependencies-rocm.yml
    parameters:
      dependencyList: ${{ parameters.rocmTestDependencies }}
      gpuTarget: $(JOB_GPU_TARGET)
      ${{ if eq(parameters.checkoutRef, '') }}:
        dependencySource: staging
      ${{ elseif ne(parameters.checkoutRef, '') }}:
        dependencySource: tag-builds
  - task: Bash@3
    displayName: Setup test environment
    inputs:
      targetType: inline
      script: |
        sudo rm -rf /opt/rocm
        sudo rm -rf /usr/sbin/rdcd
        sudo ln -s $(Agent.BuildDirectory)/rocm /opt/rocm
        sudo ln -s $(Agent.BuildDirectory)/rocm/bin/rdcd /usr/sbin/rdcd
        echo $(Agent.BuildDirectory)/rocm/lib/rdc/grpc/lib | sudo tee /etc/ld.so.conf.d/grpc.conf
        sudo ldconfig -v
  - task: Bash@3
    displayName: Test rdc
    inputs:
      targetType: inline
      script: >-
        $(Agent.BuildDirectory)/rocm/share/rdc/rdctst_tests/rdctst
        --batch_mode
        --start_rdcd
        --unauth_comm
