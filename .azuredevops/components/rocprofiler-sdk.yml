parameters:
- name: checkoutRepo
  type: string
  default: 'self'
- name: checkoutRef
  type: string
  default: ''
- name: aptPackages
  type: object
  default:
    - cmake
    - python3-pip
    - libdrm-dev
    - libdw-dev
    - libelf-dev
- name: pipModules
  type: object
  default:
    - black
    - clang-format
    - clang-tidy
    - cmake
    - cmake-format
    - dataclasses
    - numpy
    - otf2
    - pandas
    - perfetto
    - pycobertura
    - pytest
    - pyyaml
- name: rocmDependencies
  type: object
  default:
    - clr
    - llvm-project
    - rccl
    - rocm-cmake
    - rocm-core
    - rocminfo
    - ROCR-Runtime
    - rocprofiler-register
    - roctracer

jobs:
- job: rocprofilersdk
  variables:
  - group: common
  - template: /.azuredevops/variables-global.yml
  pool:
    vmImage: ${{ variables.BASE_BUILD_POOL }}
  workspace:
    clean: all
  strategy:
    matrix:
      gfx942:
        JOB_GPU_TARGET: gfx942
  steps:
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/dependencies-other.yml
    parameters:
      aptPackages: ${{ parameters.aptPackages }}
      pipModules: ${{ parameters.pipModules }}
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/preamble.yml
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/checkout.yml
    parameters:
      checkoutRepo: ${{ parameters.checkoutRepo }}
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/dependencies-aqlprofile.yml
    parameters:
      ${{ if eq(parameters.checkoutRef, '') }}:
        dependencySource: staging
      ${{ elseif ne(parameters.checkoutRef, '') }}:
        dependencySource: tag-builds
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/dependencies-rocm.yml
    parameters:
      dependencyList: ${{ parameters.rocmDependencies }}
      gpuTarget: $(JOB_GPU_TARGET)
      # CI case: download latest default branch build
      ${{ if eq(parameters.checkoutRef, '') }}:
        dependencySource: staging
      # manual build case: triggered by ROCm/ROCm repo
      ${{ elseif ne(parameters.checkoutRef, '') }}:
        dependencySource: tag-builds
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/build-cmake.yml
    parameters:
      extraBuildFlags: >-
        -DCMAKE_PREFIX_PATH=$(Agent.BuildDirectory)/rocm
        -DROCPROFILER_BUILD_TESTS=ON
        -DROCPROFILER_BUILD_SAMPLES=OFF
        -DAMDGPU_TARGETS=$(JOB_GPU_TARGET)
      multithreadFlag: -- -j2
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/artifact-upload.yml
    parameters:
      gpuTarget: $(JOB_GPU_TARGET)
